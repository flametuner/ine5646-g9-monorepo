scalar Date

directive @isLoggedin on FIELD_DEFINITION
directive @isAdmin on FIELD_DEFINITION
directive @isFinished on FIELD_DEFINITION

type User {
  id: ID!
  username: String!
  email: String! @isLoggedin
  createdAt: Date! @isLoggedin
  # wallet: Wallet! @isLoggedin
  questions: [Question!]! @isLoggedin
  # answers: [Answer!]! @isLoggedin
}

type Question {
  id: ID!
  title: String!
  alternatives: [Alternative!]!
  creator: User!
  createdAt: Date!
  expiresAt: Date!
  totalVotes: Int!
  userVoted: Int!
}

type Alternative {
  alternativeId: Int!
  text: String!
  votes: Int! @isFinished
}

type Answer {
  question: Question!
  alternativeId: Int!
}

# type ClaimReward {
#   id: ID!
#   user: User!
#   lastTimeRewarded: Date!
# }

# type Wallet {
#   id: ID!
#   balance: Int!
#   transactions: [Transaction!]!
# }

# type Transaction {
#   id: ID!
#   amount: Int!
#   timestamp: Date!
# }

type AuthPayload {
  token: String!
  user: User!
}

type Query {
  allQuestions: [Question!]!
  user: User
}

type Mutation {
  signup(email: String!, password: String!, username: String!): AuthPayload!
  login(email: String!, password: String!): AuthPayload
  createQuestion(
    title: String!
    options: [String!]!
    expiresAt: Date!
  ): Question
  answerQuestion(qustionId: Int!, choosedOption: Int!): Answer
}
